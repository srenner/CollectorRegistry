version: '3.4'
name: 'collector-registry'

networks:
  # The presence of these objects is sufficient to define them
  registry-net: {}

volumes:
  CollectorRegistry.UserUploads:
    external: true

services:

  CollectorRegistry.RabbitMQ:
    image: rabbitmq:3-management-alpine
    ports: 
      - "15672:15672"
    hostname: rabbit01
    networks: 
      - registry-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

  #CollectorRegistry.Mongo:
  #  image: mongo
  #  restart: always
  #  hostname: mongo01
  #  networks: 
  #    - registry-net
  #  environment:
  #    MONGO_INITDB_ROOT_USERNAME: root
  #    MONGO_INITDB_ROOT_PASSWORD: example

  collectorregistry.server:
    image: ${DOCKER_REGISTRY-}collectorregistryserver
    hostname: web01
    networks: 
      - registry-net
    volumes:
      - CollectorRegistry.UserUploads:/uploads
    build:
      context: .
      dockerfile: CollectorRegistry/Server/Dockerfile

  collectorregistry.geocodeservice:
    image: ${DOCKER_REGISTRY-}collectorregistrygeocodeservice
    networks: 
      - registry-net
    build:
      context: .
      dockerfile: CollectorRegistry.GeocodeService/Dockerfile

  collectorregistry.databridge:
    image: ${DOCKER_REGISTRY-}collectorregistrydatabridge
    networks: 
      - registry-net
    build:
      context: .
      dockerfile: CollectorRegistry.DataBridge/Dockerfile

  collectorregistry.imageservice:
    image: ${DOCKER_REGISTRY-}collectorregistryimageservice
    networks: 
      - registry-net
    volumes:
      - CollectorRegistry.UserUploads:/uploads
    build:
      context: .
      dockerfile: CollectorRegistry.ImageService/Dockerfile



  # this helps with development debugging as needed but won't be in final product
  # -----------------------------------------------------------------------------
  #collectorregistry.testconsole:
  #  image: ${DOCKER_REGISTRY-}collectorregistrytestconsole
  #  build:
  #    context: .
  #    dockerfile: CollectorRegistry.TestConsole/Dockerfile

  # we can create test input directly from rabbitmq webui instead of this container
  # -------------------------------------------------------------------------------
  #collectorregistry.geocodetestinput:
  #  image: ${DOCKER_REGISTRY-}collectorregistrygeocodetestinput
  #  networks: 
  #    - registry-net
  #  build:
  #    context: .
  #    dockerfile: CollectorRegistry.GeocodeTestInput/Dockerfile


