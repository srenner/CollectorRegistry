@page "/site/{siteID:int}/item/{itemID:int}"
@using CollectorRegistry.Shared
@using CollectorRegistry.Shared.ViewModels;
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavManager

<PageTitle>Item Page</PageTitle>

@if (item != null)
{
        <div>

            <h1 style="border-bottom: 4px solid @site.PrimaryColor">@item.SerialNumber</h1>


        </div>
}

@code {
    private SiteViewModel? site;
    private ItemViewModel? item;

    [Parameter]
    public int? siteID { get; set; }
    [Parameter]
    public int itemID{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = ClientFactory.CreateClient("CollectorRegistry.AnonymousServerAPI");
            site = await client.GetFromJsonAsync<SiteViewModel>("api/Site/" + siteID);
            item = await client.GetFromJsonAsync<ItemViewModel>("api/Item/" + itemID);

            if (item.SiteID != siteID)
            {
                // item does not belong to site
                // error message and/or redirect
                // not a security issue because both the item and the site are publicly available separately

                NavManager.NavigateTo("/site/" + siteID.ToString());

            }

        }
        catch (Exception exception)
        {
            throw exception;
        }
    }
}