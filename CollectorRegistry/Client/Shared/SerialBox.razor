@* Textbox search component to find an item within a site by exact match *@
@using CollectorRegistry.Shared.ResultModels;
@using CollectorRegistry.Shared.ViewModels;
@inject IHttpClientFactory ClientFactory

@if(Site != null)
{
    <div>
        <div class="input-group">
            <input class="form-control" placeholder="@Site.SerialNumberHint" @bind="serialSearchText" />
            <button type="submit" class="btn btn-primary" @onclick="FindItem">Go!</button>
        </div>
    </div>
    @if(findResult != null)
    {

        if(findResult.IsFound)
        {
            <div>found @findResult.Item.ItemID</div>
        }
        else
        {
            if(findResult.IsPatternMatch)
            {
                <div>did not find item. would you like to add it?</div>
            }
            else
            {

                <div>
                    <p>Invalid entry. Here are the basic rules:</p>
                    <ul>
                        @if(this.Site.SerialNumberStartsWith?.Length > 0)
                        {
                            <li>Starts with @Site.SerialNumberStartsWith</li>
                        }
                        @if(this.Site.SerialNumberEndsWith?.Length > 0)
                        {
                            <li>Ends with @Site.SerialNumberEndsWith</li>
                        }
                        @if(this.Site.SerialNumberMinLength.HasValue)
                        {
                            <li>At least @Site.SerialNumberMinLength characters</li>
                        }
                        @if(this.Site.SerialNumberMaxLength.HasValue)
                        {
                            <li>At most @Site.SerialNumberMaxLength characters</li>
                        }
                        @if(this.Site.SerialNumberHint?.Length > 0)
                        {
                            <li>Example hint: @Site.SerialNumberHint</li>
                        }
                    </ul>
                </div>
            }
        }

    }
    
}

@code {
    [Parameter]
    public int SiteID { get; set; }

    [Parameter]
    public SiteViewModel? Site { get; set; }

    private string serialSearchText = String.Empty;
    private ItemFindResultModel? findResult = null;
    private HttpClient anonymousClient = null;

    protected override async Task OnInitializedAsync()
    {
        anonymousClient = ClientFactory.CreateClient("CollectorRegistry.AnonymousServerAPI");
        if(Site == null)
        {
            //var client = ClientFactory.CreateClient("CollectorRegistry.AnonymousServerAPI");
            Site = await anonymousClient.GetFromJsonAsync<SiteViewModel>("api/Site/" + SiteID);
        }
    }

    private async Task FindItem()
    {
        findResult = await anonymousClient.GetFromJsonAsync<ItemFindResultModel>("api/Item/" + SiteID.ToString() + "/find/" + serialSearchText);
    }

}
